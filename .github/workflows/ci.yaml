name: lint

on:
  push:
    branches:
      - main
  release:
  pull_request:

env:
  POETRY_HOME: /opt/poetry
  POETRY_CACHE: /opt/poetry_cache

jobs:

  lint_and_test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Python 3.7
        if: matrix.python-version == '3.7'
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: 3.7
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: |
          task install
        env:
          UV_PYTHON: ${{ matrix.python-version }}
      - name: Lint
        run: |
          task lint
      - name: Run tests / coverage
        run: |
          task test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        if: matrix.python-version == '3.12'
      - name: Make docs
        if: matrix.python-version == '3.12'
        run: |
          task doc
      - name: Upload API doc as an artifact
        if: matrix.python-version == '3.12'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: apidoc
          path: apihtml/
      - name: Upload PUBLIC doc as an artifact
        if: matrix.python-version == '3.12'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: publicdoc
          path: html/
      - name: Upload COVERAGE as an artifact
        if: matrix.python-version == '3.12'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage
          path: htmlcov/

  mergify-ci-status: # this is a special job for mergify
    runs-on: ubuntu-24.04
    needs: ["lint_and_test"]
    steps:
      - name: Status
        run: |
          echo "OK"

  publish_pypi:
    runs-on: ubuntu-latest
    needs: lint_and_test
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish on Pypi
        run: |
          task publish
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}

  githubpages:
    runs-on: ubuntu-latest
    needs: lint_and_test
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps: 
      - name: Download API doc artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: apidoc
      - name: Download API doc artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: publicdoc
      - name: Download COVERAGE artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: coverage
          path: coverage
      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
