[tool.poetry]
name = "standard-structlog"
version = "0.1.0"
description = ""
authors = ["Fabien MARTY <fabien.marty@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "stlog"}]

[tool.poetry.dependencies]
python = ">=3.7,<3.12"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.247"
mypy = "^1.0.1"
black = "^23.1.0"
poethepoet = "^0.18.1"
pdoc3 = "^0.10.0"
mkdocs-material = "^9.0.13"
rich = "^13.3.2"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
mkdocs-macros-plugin = "^0.7.0"
mkdocs-include-markdown-plugin = "^4.0.4"
types-pyyaml = "^6.0.12.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F", "W", "N", "UP", "B", "I", "PL", "RUF"]
ignore = [
    "E501",   # We ignore "Line too long" errors
              # (because we consider that black is enough)
]
line-length = 88
target-version = "py37"

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.poe.tasks]
lint_ruff   = "ruff ."
reformat_ruff   = "ruff --fix ."
lint_black = "black ."
reformat_black = "black ."
lint_mypy = "mypy --check-untyped-defs ."
lint_readme = "python make_readme.py lint"
lint = ["lint_black", "lint_ruff", "lint_mypy", "lint_readme"]
reformat = ["reformat_black", "reformat_ruff"]
_clean_api_doc = "rm -Rf apihtml"
_clean_coverage = "rm -Rf htmlcov"
_clean_doc = "rm -Rf html"
_make_api_doc = "pdoc3 --html --output-dir=apihtml stlog"
_make_doc = "mkdocs build --site-dir html"
make_api_doc = ["_clean_api_doc", "_make_api_doc"]
make_doc = ["_clean_doc", "_make_doc"]
make_docs = ["make_doc", "make_api_doc", "make_readme"]
make_readme = "python make_readme.py"
clean = ["_clean_api_doc", "_clean_doc", "_clean_coverage"]
test = "pytest ."
_make_coverage = "pytest --no-cov-on-fail --cov=stlog --cov-report=term --cov-report=html tests/"
coverage = ["_clean_coverage", "_make_coverage"]

